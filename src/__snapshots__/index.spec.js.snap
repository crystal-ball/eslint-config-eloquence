// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Node configs The configs match the snapshot 1`] = `
Object {
  "env": Object {
    "browser": false,
    "es6": true,
    "node": true,
  },
  "extends": Array [
    "prettier",
    "plugin:node/recommended",
  ],
  "ignorePatterns": Array [
    "!.*",
    "public/*",
    "dist/*",
  ],
  "overrides": Array [
    Object {
      "files": Array [
        "src/**",
      ],
      "rules": Object {
        "import/no-extraneous-dependencies": Array [
          "error",
          Object {
            "devDependencies": Array [
              "**/*.{spec,stories}.{cjs,mjs,js}",
            ],
          },
        ],
        "no-console": "error",
        "node/no-process-env": "error",
        "node/no-process-exit": "error",
      },
    },
    Object {
      "files": Array [
        "*.ts",
        "*.tsx",
      ],
      "parser": "@typescript-eslint/parser",
      "parserOptions": Object {
        "project": "./tsconfig.json",
        "sourceType": "module",
      },
      "rules": Object {
        "@typescript-eslint/adjacent-overload-signatures": "error",
        "@typescript-eslint/ban-ts-comment": Array [
          "error",
          Object {
            "ts-check": "allow-with-description",
            "ts-expect-error": "allow-with-description",
            "ts-ignore": "allow-with-description",
            "ts-nocheck": "allow-with-description",
          },
        ],
        "@typescript-eslint/ban-types": "error",
        "@typescript-eslint/brace-style": "off",
        "@typescript-eslint/comma-spacing": "off",
        "@typescript-eslint/explicit-module-boundary-types": "warn",
        "@typescript-eslint/func-call-spacing": "off",
        "@typescript-eslint/indent": "off",
        "@typescript-eslint/keyword-spacing": "off",
        "@typescript-eslint/member-delimiter-style": "off",
        "@typescript-eslint/no-array-constructor": "error",
        "@typescript-eslint/no-empty-function": "error",
        "@typescript-eslint/no-empty-interface": "error",
        "@typescript-eslint/no-explicit-any": "warn",
        "@typescript-eslint/no-extra-non-null-assertion": "error",
        "@typescript-eslint/no-extra-parens": "off",
        "@typescript-eslint/no-extra-semi": "off",
        "@typescript-eslint/no-inferrable-types": "error",
        "@typescript-eslint/no-misused-new": "error",
        "@typescript-eslint/no-namespace": "error",
        "@typescript-eslint/no-non-null-asserted-optional-chain": "error",
        "@typescript-eslint/no-non-null-assertion": "warn",
        "@typescript-eslint/no-this-alias": "error",
        "@typescript-eslint/no-unused-vars": "warn",
        "@typescript-eslint/no-var-requires": "error",
        "@typescript-eslint/prefer-as-const": "error",
        "@typescript-eslint/prefer-namespace-keyword": "error",
        "@typescript-eslint/quotes": "off",
        "@typescript-eslint/semi": "off",
        "@typescript-eslint/space-before-function-paren": "off",
        "@typescript-eslint/triple-slash-reference": "error",
        "@typescript-eslint/type-annotation-spacing": "off",
        "constructor-super": "off",
        "getter-return": "off",
        "no-array-constructor": "off",
        "no-const-assign": "off",
        "no-dupe-args": "off",
        "no-dupe-class-members": "off",
        "no-dupe-keys": "off",
        "no-empty-function": "off",
        "no-extra-semi": "off",
        "no-func-assign": "off",
        "no-import-assign": "off",
        "no-new-symbol": "off",
        "no-obj-calls": "off",
        "no-redeclare": "off",
        "no-setter-return": "off",
        "no-shadow": "off",
        "no-this-before-super": "off",
        "no-undef": "off",
        "no-unreachable": "off",
        "no-unsafe-negation": "off",
        "no-unused-vars": "off",
        "no-use-before-define": "off",
        "no-var": "error",
        "prefer-const": "error",
        "prefer-rest-params": "error",
        "prefer-spread": "error",
        "valid-typeof": "off",
      },
    },
    Object {
      "env": Object {
        "jest": true,
      },
      "files": Array [
        "*.spec.js",
      ],
      "rules": Object {
        "import/first": "off",
      },
    },
    Object {
      "env": Object {
        "cypress/globals": true,
      },
      "files": Array [
        "cypress/**/*",
      ],
      "plugins": Array [
        "cypress",
      ],
      "rules": Object {
        "cypress/assertion-before-screenshot": "error",
        "cypress/no-assigning-return-values": "error",
        "cypress/no-force": "error",
        "cypress/no-unnecessary-waiting": "error",
        "cypress/require-data-selectors": "error",
        "func-names": "off",
        "spaced-comment": "off",
        "testing-library/prefer-screen-queries": "off",
      },
    },
    Object {
      "env": Object {
        "node": true,
      },
      "files": Array [
        ".eslintrc.js",
        ".storybook/main.js",
        "babel.config.js",
        "jest.config.js",
        "webpack.config.js",
      ],
      "parserOptions": Object {
        "sourceType": "script",
      },
    },
  ],
  "parser": "babel-eslint",
  "parserOptions": Object {
    "ecmaFeatures": Object {
      "jsx": true,
    },
    "ecmaVersion": 12,
    "sourceType": "module",
  },
  "plugins": Array [
    "@typescript-eslint",
    "import",
    "prettier",
    "node",
  ],
  "root": true,
  "rules": Object {
    "accessor-pairs": "error",
    "array-callback-return": Array [
      "error",
      Object {
        "allowImplicit": true,
      },
    ],
    "block-scoped-var": "error",
    "camelcase": Array [
      "error",
      Object {
        "properties": "never",
      },
    ],
    "capitalized-comments": Array [
      "off",
      "never",
      Object {
        "block": Object {
          "ignoreConsecutiveComments": true,
          "ignoreInlineComments": true,
          "ignorePattern": ".*",
        },
        "line": Object {
          "ignoreConsecutiveComments": true,
          "ignoreInlineComments": true,
          "ignorePattern": ".*",
        },
      },
    ],
    "class-methods-use-this": Array [
      "error",
      Object {
        "exceptMethods": Array [],
      },
    ],
    "complexity": Array [
      "off",
      11,
    ],
    "consistent-return": "error",
    "consistent-this": "off",
    "constructor-super": "error",
    "default-case": Array [
      "error",
      Object {
        "commentPattern": "^no default$",
      },
    ],
    "default-param-last": "error",
    "dot-notation": Array [
      "error",
      Object {
        "allowKeywords": true,
      },
    ],
    "eqeqeq": Array [
      "error",
      "always",
      Object {
        "null": "ignore",
      },
    ],
    "for-direction": "error",
    "func-name-matching": Array [
      "off",
      "always",
      Object {
        "includeCommonJSModuleExports": false,
      },
    ],
    "func-names": "warn",
    "func-style": Array [
      "off",
      "expression",
    ],
    "getter-return": Array [
      "error",
      Object {
        "allowImplicit": true,
      },
    ],
    "guard-for-in": "error",
    "id-blacklist": "off",
    "id-length": "off",
    "id-match": "off",
    "import/default": "error",
    "import/dynamic-import-chunkname": Array [
      "error",
      Object {
        "importFunctions": Array [],
        "webpackChunknameFormat": "[a-zA-Z-_/.]+",
      },
    ],
    "import/export": "error",
    "import/exports-last": "off",
    "import/extensions": "off",
    "import/first": "error",
    "import/group-exports": "off",
    "import/max-dependencies": "off",
    "import/named": "error",
    "import/namespace": "error",
    "import/newline-after-import": "error",
    "import/no-absolute-path": "error",
    "import/no-amd": "error",
    "import/no-anonymous-default-export": Array [
      "error",
      Object {
        "allowAnonymousClass": false,
        "allowAnonymousFunction": false,
        "allowArray": true,
        "allowArrowFunction": false,
        "allowLiteral": true,
        "allowObject": true,
      },
    ],
    "import/no-commonjs": "off",
    "import/no-cycle": Array [
      "error",
      Object {
        "maxDepth": Infinity,
      },
    ],
    "import/no-default-export": "off",
    "import/no-deprecated": "error",
    "import/no-duplicates": "error",
    "import/no-dynamic-require": "error",
    "import/no-extraneous-dependencies": "off",
    "import/no-internal-modules": "off",
    "import/no-mutable-exports": "error",
    "import/no-named-as-default": "error",
    "import/no-named-as-default-member": "error",
    "import/no-named-default": "error",
    "import/no-named-export": "off",
    "import/no-namespace": "off",
    "import/no-nodejs-modules": "off",
    "import/no-relative-parent-imports": "off",
    "import/no-restricted-paths": "off",
    "import/no-self-import": "error",
    "import/no-unassigned-import": "off",
    "import/no-unresolved": Array [
      "error",
      Object {
        "caseSensitive": true,
        "commonjs": true,
      },
    ],
    "import/no-unused-modules": "off",
    "import/no-useless-path-segments": Array [
      "error",
      Object {
        "noUselessIndex": true,
      },
    ],
    "import/no-webpack-loader-syntax": "error",
    "import/order": Array [
      "error",
      Object {
        "alphabetize": Object {
          "order": "ignore",
        },
        "groups": Array [
          "builtin",
          "external",
          "internal",
          "parent",
          "sibling",
          "index",
          "unknown",
        ],
        "newlines-between": "ignore",
      },
    ],
    "import/prefer-default-export": "off",
    "import/unambiguous": "off",
    "init-declarations": "off",
    "line-comment-position": Array [
      "off",
      Object {
        "applyDefaultPatterns": true,
        "ignorePattern": "",
        "position": "above",
      },
    ],
    "lines-around-directive": Array [
      "error",
      Object {
        "after": "always",
        "before": "always",
      },
    ],
    "lines-between-class-members": Array [
      "error",
      "always",
      Object {
        "exceptAfterSingleLine": false,
      },
    ],
    "max-classes-per-file": Array [
      "off",
      1,
    ],
    "max-depth": Array [
      "off",
      4,
    ],
    "max-lines": Array [
      "off",
      Object {
        "max": 300,
        "skipBlankLines": true,
        "skipComments": true,
      },
    ],
    "max-lines-per-function": Array [
      "off",
      Object {
        "IIFEs": true,
        "max": 50,
        "skipBlankLines": true,
        "skipComments": true,
      },
    ],
    "max-nested-callbacks": "off",
    "max-params": Array [
      "error",
      3,
    ],
    "max-statements": Array [
      "off",
      10,
    ],
    "max-statements-per-line": Array [
      "off",
      Object {
        "max": 1,
      },
    ],
    "multiline-comment-style": Array [
      "off",
      "starred-block",
    ],
    "new-cap": Array [
      "error",
      Object {
        "capIsNew": false,
        "capIsNewExceptions": Array [
          "Immutable.Map",
          "Immutable.Set",
          "Immutable.List",
        ],
        "newIsCap": true,
        "newIsCapExceptions": Array [],
      },
    ],
    "newline-after-var": "off",
    "newline-before-return": "off",
    "no-alert": "warn",
    "no-array-constructor": "error",
    "no-async-promise-executor": "error",
    "no-await-in-loop": "error",
    "no-bitwise": "error",
    "no-caller": "error",
    "no-case-declarations": "error",
    "no-catch-shadow": "off",
    "no-class-assign": "error",
    "no-compare-neg-zero": "error",
    "no-cond-assign": Array [
      "error",
      "always",
    ],
    "no-console": "off",
    "no-const-assign": "error",
    "no-constant-condition": "warn",
    "no-constructor-return": "error",
    "no-continue": "off",
    "no-control-regex": "error",
    "no-debugger": "error",
    "no-delete-var": "error",
    "no-div-regex": "off",
    "no-dupe-args": "error",
    "no-dupe-class-members": "error",
    "no-dupe-else-if": "error",
    "no-dupe-keys": "error",
    "no-duplicate-case": "error",
    "no-duplicate-imports": "off",
    "no-else-return": Array [
      "error",
      Object {
        "allowElseIf": false,
      },
    ],
    "no-empty": "error",
    "no-empty-character-class": "error",
    "no-empty-function": Array [
      "error",
      Object {
        "allow": Array [
          "arrowFunctions",
          "functions",
          "methods",
        ],
      },
    ],
    "no-empty-pattern": "error",
    "no-eq-null": "off",
    "no-eval": "error",
    "no-ex-assign": "error",
    "no-extend-native": "error",
    "no-extra-bind": "error",
    "no-extra-boolean-cast": "error",
    "no-extra-label": "error",
    "no-extra-parens": "off",
    "no-extra-semi": "error",
    "no-fallthrough": "error",
    "no-func-assign": "error",
    "no-global-assign": Array [
      "error",
      Object {
        "exceptions": Array [],
      },
    ],
    "no-implicit-coercion": Array [
      "off",
      Object {
        "allow": Array [],
        "boolean": false,
        "number": true,
        "string": true,
      },
    ],
    "no-implicit-globals": "off",
    "no-implied-eval": "error",
    "no-import-assign": "error",
    "no-inline-comments": "off",
    "no-inner-declarations": "error",
    "no-invalid-regexp": "error",
    "no-invalid-this": "off",
    "no-irregular-whitespace": "error",
    "no-iterator": "error",
    "no-label-var": "error",
    "no-labels": Array [
      "error",
      Object {
        "allowLoop": false,
        "allowSwitch": false,
      },
    ],
    "no-lone-blocks": "error",
    "no-lonely-if": "error",
    "no-loop-func": "error",
    "no-magic-numbers": Array [
      "off",
      Object {
        "detectObjects": false,
        "enforceConst": true,
        "ignore": Array [],
        "ignoreArrayIndexes": true,
      },
    ],
    "no-misleading-character-class": "error",
    "no-multi-assign": Array [
      "error",
    ],
    "no-multi-str": "error",
    "no-native-reassign": "off",
    "no-negated-condition": "off",
    "no-nested-ternary": "off",
    "no-new": "error",
    "no-new-func": "error",
    "no-new-object": "error",
    "no-new-symbol": "error",
    "no-new-wrappers": "error",
    "no-obj-calls": "error",
    "no-octal": "error",
    "no-octal-escape": "error",
    "no-param-reassign": Array [
      "error",
      Object {
        "ignorePropertyModificationsFor": Array [
          "acc",
          "accumulator",
          "e",
          "ctx",
          "req",
          "request",
          "res",
          "response",
          "$scope",
          "staticContext",
        ],
        "props": true,
      },
    ],
    "no-plusplus": "error",
    "no-process-exit": "off",
    "no-proto": "error",
    "no-prototype-builtins": "error",
    "no-redeclare": "error",
    "no-regex-spaces": "error",
    "no-restricted-globals": Array [
      "error",
      "isFinite",
      "isNaN",
      "addEventListener",
      "blur",
      "close",
      "closed",
      "confirm",
      "defaultStatus",
      "defaultstatus",
      "event",
      "external",
      "find",
      "focus",
      "frameElement",
      "frames",
      "history",
      "innerHeight",
      "innerWidth",
      "length",
      "location",
      "locationbar",
      "menubar",
      "moveBy",
      "moveTo",
      "name",
      "onblur",
      "onerror",
      "onfocus",
      "onload",
      "onresize",
      "onunload",
      "open",
      "opener",
      "opera",
      "outerHeight",
      "outerWidth",
      "pageXOffset",
      "pageYOffset",
      "parent",
      "print",
      "removeEventListener",
      "resizeBy",
      "resizeTo",
      "screen",
      "screenLeft",
      "screenTop",
      "screenX",
      "screenY",
      "scroll",
      "scrollbars",
      "scrollBy",
      "scrollTo",
      "scrollX",
      "scrollY",
      "self",
      "status",
      "statusbar",
      "stop",
      "toolbar",
      "top",
    ],
    "no-restricted-imports": "off",
    "no-restricted-properties": Array [
      "error",
      Object {
        "message": "arguments.callee is deprecated",
        "object": "arguments",
        "property": "callee",
      },
      Object {
        "message": "Please use Number.isFinite instead",
        "object": "global",
        "property": "isFinite",
      },
      Object {
        "message": "Please use Number.isFinite instead",
        "object": "self",
        "property": "isFinite",
      },
      Object {
        "message": "Please use Number.isFinite instead",
        "object": "window",
        "property": "isFinite",
      },
      Object {
        "message": "Please use Number.isNaN instead",
        "object": "global",
        "property": "isNaN",
      },
      Object {
        "message": "Please use Number.isNaN instead",
        "object": "self",
        "property": "isNaN",
      },
      Object {
        "message": "Please use Number.isNaN instead",
        "object": "window",
        "property": "isNaN",
      },
      Object {
        "message": "Please use Object.defineProperty instead.",
        "property": "__defineGetter__",
      },
      Object {
        "message": "Please use Object.defineProperty instead.",
        "property": "__defineSetter__",
      },
      Object {
        "message": "Use the exponentiation operator (**) instead.",
        "object": "Math",
        "property": "pow",
      },
    ],
    "no-restricted-syntax": Array [
      "error",
      Object {
        "message": "for..in loops iterate over the entire prototype chain, which is virtually never what you want. Use Object.{keys,values,entries}, and iterate over the resulting array.",
        "selector": "ForInStatement",
      },
      Object {
        "message": "Labels are a form of GOTO; using them makes code confusing and hard to maintain and understand.",
        "selector": "LabeledStatement",
      },
      Object {
        "message": "\`with\` is disallowed in strict mode because it makes code impossible to predict and optimize.",
        "selector": "WithStatement",
      },
    ],
    "no-return-assign": Array [
      "error",
      "always",
    ],
    "no-return-await": "error",
    "no-script-url": "error",
    "no-self-assign": Array [
      "error",
      Object {
        "props": false,
      },
    ],
    "no-self-compare": "error",
    "no-sequences": "error",
    "no-setter-return": "error",
    "no-shadow": "error",
    "no-shadow-restricted-names": "error",
    "no-sparse-arrays": "error",
    "no-template-curly-in-string": "error",
    "no-ternary": "off",
    "no-this-before-super": "error",
    "no-throw-literal": "error",
    "no-undef": "error",
    "no-undef-init": "error",
    "no-undefined": "off",
    "no-underscore-dangle": Array [
      "error",
      Object {
        "allow": Array [],
        "allowAfterSuper": false,
        "allowAfterThis": false,
        "enforceInMethodNames": true,
      },
    ],
    "no-unexpected-multiline": "error",
    "no-unmodified-loop-condition": "off",
    "no-unneeded-ternary": Array [
      "error",
      Object {
        "defaultAssignment": false,
      },
    ],
    "no-unreachable": "error",
    "no-unsafe-finally": "error",
    "no-unsafe-negation": "error",
    "no-unused-expressions": Array [
      "error",
      Object {
        "allowShortCircuit": false,
        "allowTaggedTemplates": false,
        "allowTernary": false,
      },
    ],
    "no-unused-labels": "error",
    "no-unused-vars": Array [
      "error",
      Object {
        "args": "after-used",
        "ignoreRestSiblings": true,
        "vars": "all",
      },
    ],
    "no-use-before-define": Array [
      "error",
      Object {
        "classes": true,
        "functions": true,
        "variables": true,
      },
    ],
    "no-useless-call": "off",
    "no-useless-catch": "off",
    "no-useless-computed-key": "error",
    "no-useless-concat": "error",
    "no-useless-constructor": "error",
    "no-useless-escape": "error",
    "no-useless-rename": "error",
    "no-useless-return": "error",
    "no-var": "error",
    "no-void": "error",
    "no-warning-comments": Array [
      "off",
      Object {
        "location": "start",
        "terms": Array [
          "todo",
          "fixme",
          "xxx",
        ],
      },
    ],
    "no-with": "error",
    "node/callback-return": Array [
      "error",
      Array [
        "callback",
        "cb",
        "next",
      ],
    ],
    "node/exports-style": Array [
      "error",
      "module.exports",
    ],
    "node/file-extension-in-import": "off",
    "node/global-require": "error",
    "node/handle-callback-err": "error",
    "node/no-callback-literal": "error",
    "node/no-deprecated-api": "error",
    "node/no-exports-assign": "error",
    "node/no-extraneous-import": "off",
    "node/no-extraneous-require": "off",
    "node/no-missing-import": "off",
    "node/no-missing-require": "off",
    "node/no-mixed-requires": Array [
      "error",
      Object {
        "allowCall": false,
        "grouping": true,
      },
    ],
    "node/no-new-require": "error",
    "node/no-path-concat": "error",
    "node/no-process-env": "off",
    "node/no-process-exit": "off",
    "node/no-restricted-import": "off",
    "node/no-restricted-require": "off",
    "node/no-sync": "error",
    "node/no-unpublished-bin": "error",
    "node/no-unpublished-import": "off",
    "node/no-unpublished-require": "off",
    "node/no-unsupported-features/es-builtins": "error",
    "node/no-unsupported-features/es-syntax": "off",
    "node/no-unsupported-features/node-builtins": "error",
    "node/prefer-global/buffer": Array [
      "error",
      "always",
    ],
    "node/prefer-global/console": Array [
      "error",
      "always",
    ],
    "node/prefer-global/process": Array [
      "error",
      "always",
    ],
    "node/prefer-global/text-decoder": Array [
      "error",
      "always",
    ],
    "node/prefer-global/text-encoder": Array [
      "error",
      "always",
    ],
    "node/prefer-global/url": Array [
      "error",
      "always",
    ],
    "node/prefer-global/url-search-params": Array [
      "error",
      "always",
    ],
    "node/prefer-promises/dns": "error",
    "node/prefer-promises/fs": "error",
    "node/process-exit-as-throw": "error",
    "node/shebang": "error",
    "object-shorthand": Array [
      "error",
      "always",
      Object {
        "avoidQuotes": true,
        "ignoreConstructors": false,
      },
    ],
    "one-var": Array [
      "error",
      "never",
    ],
    "operator-assignment": Array [
      "error",
      "always",
    ],
    "padding-line-between-statements": "off",
    "prefer-const": Array [
      "error",
      Object {
        "destructuring": "any",
        "ignoreReadBeforeAssign": true,
      },
    ],
    "prefer-destructuring": Array [
      "error",
      Object {
        "AssignmentExpression": Object {
          "array": true,
          "object": true,
        },
        "VariableDeclarator": Object {
          "array": false,
          "object": true,
        },
      },
      Object {
        "enforceForRenamedProperties": false,
      },
    ],
    "prefer-exponentiation-operator": "error",
    "prefer-named-capture-group": "off",
    "prefer-numeric-literals": "error",
    "prefer-object-spread": "off",
    "prefer-promise-reject-errors": Array [
      "error",
      Object {
        "allowEmptyReject": true,
      },
    ],
    "prefer-reflect": "off",
    "prefer-regex-literals": "error",
    "prefer-rest-params": "error",
    "prefer-spread": "error",
    "prefer-template": "error",
    "prettier/prettier": "error",
    "radix": "error",
    "require-atomic-updates": "off",
    "require-await": "off",
    "require-jsdoc": "off",
    "require-unicode-regexp": "off",
    "require-yield": "error",
    "sort-imports": Array [
      "error",
      Object {
        "ignoreCase": false,
        "ignoreDeclarationSort": true,
        "ignoreMemberSort": false,
      },
    ],
    "sort-keys": Array [
      "off",
      "asc",
      Object {
        "caseSensitive": false,
        "natural": true,
      },
    ],
    "sort-vars": "off",
    "spaced-comment": Array [
      "error",
      "always",
      Object {
        "block": Object {
          "balanced": true,
          "exceptions": Array [
            "-",
            "+",
          ],
          "markers": Array [
            "=",
            "!",
          ],
        },
        "line": Object {
          "exceptions": Array [
            "-",
            "+",
          ],
          "markers": Array [
            "=",
            "!",
          ],
        },
      },
    ],
    "strict": "error",
    "symbol-description": "error",
    "use-isnan": "error",
    "valid-typeof": Array [
      "error",
      Object {
        "requireStringLiterals": true,
      },
    ],
    "vars-on-top": "error",
    "yoda": "error",
  },
  "settings": Object {
    "import/cache": 60,
    "import/extensions": Array [
      ".js",
      ".jsx",
      ".mjs",
      ".ts",
      ".tsx",
      ".d.ts",
    ],
    "import/external-module-folders": Array [
      "node_modules",
      "node_modules/@types",
    ],
    "import/internal-regex": /\\^@\\\\//,
    "import/parsers": Object {
      "@typescript-eslint/parser": Array [
        ".ts",
        ".tsx",
        ".d.ts",
      ],
    },
    "import/resolver": "/mock/test/path",
    "react": Object {
      "linkComponents": Array [
        Object {
          "linkAttribute": "to",
          "name": "Link",
        },
      ],
      "pragma": "React",
      "version": "detect",
    },
  },
}
`;

exports[`React configs The configs match the snapshot 1`] = `
Object {
  "env": Object {
    "browser": true,
    "es6": true,
    "node": false,
  },
  "extends": Array [
    "prettier",
  ],
  "ignorePatterns": Array [
    "!.*",
    "public/*",
    "dist/*",
  ],
  "overrides": Array [
    Object {
      "files": Array [
        "src/**",
      ],
      "rules": Object {
        "import/no-extraneous-dependencies": Array [
          "error",
          Object {
            "devDependencies": Array [
              "**/*.{spec,stories}.{cjs,mjs,js}",
            ],
          },
        ],
        "no-console": "error",
      },
    },
    Object {
      "files": Array [
        "*.ts",
        "*.tsx",
      ],
      "parser": "@typescript-eslint/parser",
      "parserOptions": Object {
        "project": "./tsconfig.json",
        "sourceType": "module",
      },
      "rules": Object {
        "@typescript-eslint/adjacent-overload-signatures": "error",
        "@typescript-eslint/ban-ts-comment": Array [
          "error",
          Object {
            "ts-check": "allow-with-description",
            "ts-expect-error": "allow-with-description",
            "ts-ignore": "allow-with-description",
            "ts-nocheck": "allow-with-description",
          },
        ],
        "@typescript-eslint/ban-types": "error",
        "@typescript-eslint/brace-style": "off",
        "@typescript-eslint/comma-spacing": "off",
        "@typescript-eslint/explicit-module-boundary-types": "warn",
        "@typescript-eslint/func-call-spacing": "off",
        "@typescript-eslint/indent": "off",
        "@typescript-eslint/keyword-spacing": "off",
        "@typescript-eslint/member-delimiter-style": "off",
        "@typescript-eslint/no-array-constructor": "error",
        "@typescript-eslint/no-empty-function": "error",
        "@typescript-eslint/no-empty-interface": "error",
        "@typescript-eslint/no-explicit-any": "warn",
        "@typescript-eslint/no-extra-non-null-assertion": "error",
        "@typescript-eslint/no-extra-parens": "off",
        "@typescript-eslint/no-extra-semi": "off",
        "@typescript-eslint/no-inferrable-types": "error",
        "@typescript-eslint/no-misused-new": "error",
        "@typescript-eslint/no-namespace": "error",
        "@typescript-eslint/no-non-null-asserted-optional-chain": "error",
        "@typescript-eslint/no-non-null-assertion": "warn",
        "@typescript-eslint/no-this-alias": "error",
        "@typescript-eslint/no-unused-vars": "warn",
        "@typescript-eslint/no-var-requires": "error",
        "@typescript-eslint/prefer-as-const": "error",
        "@typescript-eslint/prefer-namespace-keyword": "error",
        "@typescript-eslint/quotes": "off",
        "@typescript-eslint/semi": "off",
        "@typescript-eslint/space-before-function-paren": "off",
        "@typescript-eslint/triple-slash-reference": "error",
        "@typescript-eslint/type-annotation-spacing": "off",
        "constructor-super": "off",
        "getter-return": "off",
        "no-array-constructor": "off",
        "no-const-assign": "off",
        "no-dupe-args": "off",
        "no-dupe-class-members": "off",
        "no-dupe-keys": "off",
        "no-empty-function": "off",
        "no-extra-semi": "off",
        "no-func-assign": "off",
        "no-import-assign": "off",
        "no-new-symbol": "off",
        "no-obj-calls": "off",
        "no-redeclare": "off",
        "no-setter-return": "off",
        "no-shadow": "off",
        "no-this-before-super": "off",
        "no-undef": "off",
        "no-unreachable": "off",
        "no-unsafe-negation": "off",
        "no-unused-vars": "off",
        "no-use-before-define": "off",
        "no-var": "error",
        "prefer-const": "error",
        "prefer-rest-params": "error",
        "prefer-spread": "error",
        "valid-typeof": "off",
      },
    },
    Object {
      "env": Object {
        "jest": true,
      },
      "files": Array [
        "*.spec.js",
      ],
      "rules": Object {
        "import/first": "off",
      },
    },
    Object {
      "env": Object {
        "cypress/globals": true,
      },
      "files": Array [
        "cypress/**/*",
      ],
      "plugins": Array [
        "cypress",
      ],
      "rules": Object {
        "cypress/assertion-before-screenshot": "error",
        "cypress/no-assigning-return-values": "error",
        "cypress/no-force": "error",
        "cypress/no-unnecessary-waiting": "error",
        "cypress/require-data-selectors": "error",
        "func-names": "off",
        "spaced-comment": "off",
        "testing-library/prefer-screen-queries": "off",
      },
    },
    Object {
      "env": Object {
        "node": true,
      },
      "files": Array [
        ".eslintrc.js",
        ".storybook/main.js",
        "babel.config.js",
        "jest.config.js",
        "webpack.config.js",
      ],
      "parserOptions": Object {
        "sourceType": "script",
      },
    },
  ],
  "parser": "babel-eslint",
  "parserOptions": Object {
    "ecmaFeatures": Object {
      "jsx": true,
    },
    "ecmaVersion": 12,
    "sourceType": "module",
  },
  "plugins": Array [
    "@typescript-eslint",
    "import",
    "prettier",
    "jest-dom",
    "jsx-a11y",
    "react",
    "react-hooks",
    "testing-library",
  ],
  "root": true,
  "rules": Object {
    "accessor-pairs": "error",
    "array-callback-return": Array [
      "error",
      Object {
        "allowImplicit": true,
      },
    ],
    "block-scoped-var": "error",
    "camelcase": Array [
      "error",
      Object {
        "properties": "never",
      },
    ],
    "capitalized-comments": Array [
      "off",
      "never",
      Object {
        "block": Object {
          "ignoreConsecutiveComments": true,
          "ignoreInlineComments": true,
          "ignorePattern": ".*",
        },
        "line": Object {
          "ignoreConsecutiveComments": true,
          "ignoreInlineComments": true,
          "ignorePattern": ".*",
        },
      },
    ],
    "class-methods-use-this": Array [
      "error",
      Object {
        "exceptMethods": Array [
          "render",
          "getInitialState",
          "getDefaultProps",
          "getChildContext",
          "componentWillMount",
          "UNSAFE_componentWillMount",
          "componentDidMount",
          "componentWillReceiveProps",
          "UNSAFE_componentWillReceiveProps",
          "shouldComponentUpdate",
          "componentWillUpdate",
          "UNSAFE_componentWillUpdate",
          "componentDidUpdate",
          "componentWillUnmount",
          "componentDidCatch",
          "getSnapshotBeforeUpdate",
        ],
      },
    ],
    "complexity": Array [
      "off",
      11,
    ],
    "consistent-return": "error",
    "consistent-this": "off",
    "constructor-super": "error",
    "default-case": Array [
      "error",
      Object {
        "commentPattern": "^no default$",
      },
    ],
    "default-param-last": "error",
    "dot-notation": Array [
      "error",
      Object {
        "allowKeywords": true,
      },
    ],
    "eqeqeq": Array [
      "error",
      "always",
      Object {
        "null": "ignore",
      },
    ],
    "for-direction": "error",
    "func-name-matching": Array [
      "off",
      "always",
      Object {
        "includeCommonJSModuleExports": false,
      },
    ],
    "func-names": "warn",
    "func-style": Array [
      "off",
      "expression",
    ],
    "getter-return": Array [
      "error",
      Object {
        "allowImplicit": true,
      },
    ],
    "guard-for-in": "error",
    "id-blacklist": "off",
    "id-length": "off",
    "id-match": "off",
    "import/default": "error",
    "import/dynamic-import-chunkname": Array [
      "error",
      Object {
        "importFunctions": Array [],
        "webpackChunknameFormat": "[a-zA-Z-_/.]+",
      },
    ],
    "import/export": "error",
    "import/exports-last": "off",
    "import/extensions": Array [
      "error",
      "ignorePackages",
      Object {
        "js": "never",
        "ts": "never",
        "tsx": "never",
      },
    ],
    "import/first": "error",
    "import/group-exports": "off",
    "import/max-dependencies": "off",
    "import/named": "error",
    "import/namespace": "error",
    "import/newline-after-import": "error",
    "import/no-absolute-path": "error",
    "import/no-amd": "error",
    "import/no-anonymous-default-export": Array [
      "error",
      Object {
        "allowAnonymousClass": false,
        "allowAnonymousFunction": false,
        "allowArray": true,
        "allowArrowFunction": false,
        "allowLiteral": true,
        "allowObject": true,
      },
    ],
    "import/no-commonjs": "off",
    "import/no-cycle": Array [
      "error",
      Object {
        "maxDepth": Infinity,
      },
    ],
    "import/no-default-export": "off",
    "import/no-deprecated": "error",
    "import/no-duplicates": "error",
    "import/no-dynamic-require": "error",
    "import/no-extraneous-dependencies": "off",
    "import/no-internal-modules": "off",
    "import/no-mutable-exports": "error",
    "import/no-named-as-default": "error",
    "import/no-named-as-default-member": "error",
    "import/no-named-default": "error",
    "import/no-named-export": "off",
    "import/no-namespace": "off",
    "import/no-nodejs-modules": "off",
    "import/no-relative-parent-imports": "off",
    "import/no-restricted-paths": "off",
    "import/no-self-import": "error",
    "import/no-unassigned-import": "off",
    "import/no-unresolved": Array [
      "error",
      Object {
        "caseSensitive": true,
        "commonjs": true,
      },
    ],
    "import/no-unused-modules": "off",
    "import/no-useless-path-segments": Array [
      "error",
      Object {
        "noUselessIndex": true,
      },
    ],
    "import/no-webpack-loader-syntax": "error",
    "import/order": Array [
      "error",
      Object {
        "alphabetize": Object {
          "order": "ignore",
        },
        "groups": Array [
          "builtin",
          "external",
          "internal",
          "parent",
          "sibling",
          "index",
          "unknown",
        ],
        "newlines-between": "ignore",
      },
    ],
    "import/prefer-default-export": "off",
    "import/unambiguous": "off",
    "init-declarations": "off",
    "jest-dom/prefer-checked": "error",
    "jest-dom/prefer-empty": "error",
    "jest-dom/prefer-enabled-disabled": "error",
    "jest-dom/prefer-focus": "error",
    "jest-dom/prefer-required": "error",
    "jest-dom/prefer-to-have-attribute": "error",
    "jest-dom/prefer-to-have-style": "error",
    "jest-dom/prefer-to-have-text-content": "error",
    "jsx-a11y/accessible-emoji": "error",
    "jsx-a11y/alt-text": Array [
      "error",
      Object {
        "area": Array [],
        "elements": Array [
          "img",
          "object",
          "area",
          "input[type=\\"image\\"]",
        ],
        "img": Array [],
        "input[type=\\"image\\"]": Array [],
        "object": Array [],
      },
    ],
    "jsx-a11y/anchor-has-content": Array [
      "error",
      Object {
        "components": Array [],
      },
    ],
    "jsx-a11y/anchor-is-valid": Array [
      "error",
      Object {
        "aspects": Array [
          "noHref",
          "invalidHref",
          "preferButton",
        ],
        "components": Array [
          "Link",
        ],
        "specialLink": Array [
          "to",
        ],
      },
    ],
    "jsx-a11y/aria-activedescendant-has-tabindex": "error",
    "jsx-a11y/aria-props": "error",
    "jsx-a11y/aria-proptypes": "error",
    "jsx-a11y/aria-role": Array [
      "error",
      Object {
        "ignoreNonDom": false,
      },
    ],
    "jsx-a11y/aria-unsupported-elements": "error",
    "jsx-a11y/click-events-have-key-events": "error",
    "jsx-a11y/control-has-associated-label": Array [
      "off",
      Object {
        "controlComponents": Array [],
        "depth": 5,
        "ignoreElements": Array [
          "audio",
          "canvas",
          "embed",
          "input",
          "textarea",
          "tr",
          "video",
        ],
        "ignoreRoles": Array [
          "grid",
          "listbox",
          "menu",
          "menubar",
          "radiogroup",
          "row",
          "tablist",
          "toolbar",
          "tree",
          "treegrid",
        ],
        "labelAttributes": Array [
          "label",
        ],
      },
    ],
    "jsx-a11y/heading-has-content": Array [
      "error",
      Object {
        "components": Array [
          "",
        ],
      },
    ],
    "jsx-a11y/html-has-lang": "error",
    "jsx-a11y/iframe-has-title": "error",
    "jsx-a11y/img-redundant-alt": "error",
    "jsx-a11y/interactive-supports-focus": "error",
    "jsx-a11y/label-has-associated-control": Array [
      "error",
      Object {
        "assert": "either",
        "controlComponents": Array [],
        "depth": 25,
        "labelAttributes": Array [],
        "labelComponents": Array [],
      },
    ],
    "jsx-a11y/lang": "error",
    "jsx-a11y/media-has-caption": Array [
      "error",
      Object {
        "audio": Array [],
        "track": Array [],
        "video": Array [],
      },
    ],
    "jsx-a11y/mouse-events-have-key-events": "error",
    "jsx-a11y/no-access-key": "error",
    "jsx-a11y/no-autofocus": Array [
      "error",
      Object {
        "ignoreNonDOM": true,
      },
    ],
    "jsx-a11y/no-distracting-elements": Array [
      "error",
      Object {
        "elements": Array [
          "marquee",
          "blink",
        ],
      },
    ],
    "jsx-a11y/no-interactive-element-to-noninteractive-role": Array [
      "error",
      Object {
        "tr": Array [
          "none",
          "presentation",
        ],
      },
    ],
    "jsx-a11y/no-noninteractive-element-interactions": Array [
      "error",
      Object {
        "handlers": Array [
          "onClick",
          "onMouseDown",
          "onMouseUp",
          "onKeyPress",
          "onKeyDown",
          "onKeyUp",
        ],
      },
    ],
    "jsx-a11y/no-noninteractive-element-to-interactive-role": Array [
      "error",
      Object {
        "li": Array [
          "menuitem",
          "option",
          "row",
          "tab",
          "treeitem",
        ],
        "ol": Array [
          "listbox",
          "menu",
          "menubar",
          "radiogroup",
          "tablist",
          "tree",
          "treegrid",
        ],
        "table": Array [
          "grid",
        ],
        "td": Array [
          "gridcell",
        ],
        "ul": Array [
          "listbox",
          "menu",
          "menubar",
          "radiogroup",
          "tablist",
          "tree",
          "treegrid",
        ],
      },
    ],
    "jsx-a11y/no-noninteractive-tabindex": Array [
      "error",
      Object {
        "roles": Array [
          "tabpanel",
        ],
        "tags": Array [],
      },
    ],
    "jsx-a11y/no-onchange": "off",
    "jsx-a11y/no-redundant-roles": "error",
    "jsx-a11y/no-static-element-interactions": Array [
      "error",
      Object {
        "handlers": Array [
          "onClick",
          "onMouseDown",
          "onMouseUp",
          "onKeyPress",
          "onKeyDown",
          "onKeyUp",
        ],
      },
    ],
    "jsx-a11y/role-has-required-aria-props": "error",
    "jsx-a11y/role-supports-aria-props": "error",
    "jsx-a11y/scope": "error",
    "jsx-a11y/tabindex-no-positive": "error",
    "line-comment-position": Array [
      "off",
      Object {
        "applyDefaultPatterns": true,
        "ignorePattern": "",
        "position": "above",
      },
    ],
    "lines-around-directive": Array [
      "error",
      Object {
        "after": "always",
        "before": "always",
      },
    ],
    "lines-between-class-members": Array [
      "error",
      "always",
      Object {
        "exceptAfterSingleLine": false,
      },
    ],
    "max-classes-per-file": Array [
      "off",
      1,
    ],
    "max-depth": Array [
      "off",
      4,
    ],
    "max-lines": Array [
      "off",
      Object {
        "max": 300,
        "skipBlankLines": true,
        "skipComments": true,
      },
    ],
    "max-lines-per-function": Array [
      "off",
      Object {
        "IIFEs": true,
        "max": 50,
        "skipBlankLines": true,
        "skipComments": true,
      },
    ],
    "max-nested-callbacks": "off",
    "max-params": Array [
      "error",
      3,
    ],
    "max-statements": Array [
      "off",
      10,
    ],
    "max-statements-per-line": Array [
      "off",
      Object {
        "max": 1,
      },
    ],
    "multiline-comment-style": Array [
      "off",
      "starred-block",
    ],
    "new-cap": Array [
      "error",
      Object {
        "capIsNew": false,
        "capIsNewExceptions": Array [
          "Immutable.Map",
          "Immutable.Set",
          "Immutable.List",
        ],
        "newIsCap": true,
        "newIsCapExceptions": Array [],
      },
    ],
    "newline-after-var": "off",
    "newline-before-return": "off",
    "no-alert": "warn",
    "no-array-constructor": "error",
    "no-async-promise-executor": "error",
    "no-await-in-loop": "error",
    "no-bitwise": "error",
    "no-caller": "error",
    "no-case-declarations": "error",
    "no-catch-shadow": "off",
    "no-class-assign": "error",
    "no-compare-neg-zero": "error",
    "no-cond-assign": Array [
      "error",
      "always",
    ],
    "no-console": "off",
    "no-const-assign": "error",
    "no-constant-condition": "warn",
    "no-constructor-return": "error",
    "no-continue": "off",
    "no-control-regex": "error",
    "no-debugger": "error",
    "no-delete-var": "error",
    "no-div-regex": "off",
    "no-dupe-args": "error",
    "no-dupe-class-members": "error",
    "no-dupe-else-if": "error",
    "no-dupe-keys": "error",
    "no-duplicate-case": "error",
    "no-duplicate-imports": "off",
    "no-else-return": Array [
      "error",
      Object {
        "allowElseIf": false,
      },
    ],
    "no-empty": "error",
    "no-empty-character-class": "error",
    "no-empty-function": Array [
      "error",
      Object {
        "allow": Array [
          "arrowFunctions",
          "functions",
          "methods",
        ],
      },
    ],
    "no-empty-pattern": "error",
    "no-eq-null": "off",
    "no-eval": "error",
    "no-ex-assign": "error",
    "no-extend-native": "error",
    "no-extra-bind": "error",
    "no-extra-boolean-cast": "error",
    "no-extra-label": "error",
    "no-extra-parens": "off",
    "no-extra-semi": "error",
    "no-fallthrough": "error",
    "no-func-assign": "error",
    "no-global-assign": Array [
      "error",
      Object {
        "exceptions": Array [],
      },
    ],
    "no-implicit-coercion": Array [
      "off",
      Object {
        "allow": Array [],
        "boolean": false,
        "number": true,
        "string": true,
      },
    ],
    "no-implicit-globals": "off",
    "no-implied-eval": "error",
    "no-import-assign": "error",
    "no-inline-comments": "off",
    "no-inner-declarations": "error",
    "no-invalid-regexp": "error",
    "no-invalid-this": "off",
    "no-irregular-whitespace": "error",
    "no-iterator": "error",
    "no-label-var": "error",
    "no-labels": Array [
      "error",
      Object {
        "allowLoop": false,
        "allowSwitch": false,
      },
    ],
    "no-lone-blocks": "error",
    "no-lonely-if": "error",
    "no-loop-func": "error",
    "no-magic-numbers": Array [
      "off",
      Object {
        "detectObjects": false,
        "enforceConst": true,
        "ignore": Array [],
        "ignoreArrayIndexes": true,
      },
    ],
    "no-misleading-character-class": "error",
    "no-multi-assign": Array [
      "error",
    ],
    "no-multi-str": "error",
    "no-native-reassign": "off",
    "no-negated-condition": "off",
    "no-nested-ternary": "off",
    "no-new": "error",
    "no-new-func": "error",
    "no-new-object": "error",
    "no-new-symbol": "error",
    "no-new-wrappers": "error",
    "no-obj-calls": "error",
    "no-octal": "error",
    "no-octal-escape": "error",
    "no-param-reassign": Array [
      "error",
      Object {
        "ignorePropertyModificationsFor": Array [
          "acc",
          "accumulator",
          "e",
          "ctx",
          "req",
          "request",
          "res",
          "response",
          "$scope",
          "staticContext",
        ],
        "props": true,
      },
    ],
    "no-plusplus": "error",
    "no-proto": "error",
    "no-prototype-builtins": "error",
    "no-redeclare": "error",
    "no-regex-spaces": "error",
    "no-restricted-globals": Array [
      "error",
      "isFinite",
      "isNaN",
      "addEventListener",
      "blur",
      "close",
      "closed",
      "confirm",
      "defaultStatus",
      "defaultstatus",
      "event",
      "external",
      "find",
      "focus",
      "frameElement",
      "frames",
      "history",
      "innerHeight",
      "innerWidth",
      "length",
      "location",
      "locationbar",
      "menubar",
      "moveBy",
      "moveTo",
      "name",
      "onblur",
      "onerror",
      "onfocus",
      "onload",
      "onresize",
      "onunload",
      "open",
      "opener",
      "opera",
      "outerHeight",
      "outerWidth",
      "pageXOffset",
      "pageYOffset",
      "parent",
      "print",
      "removeEventListener",
      "resizeBy",
      "resizeTo",
      "screen",
      "screenLeft",
      "screenTop",
      "screenX",
      "screenY",
      "scroll",
      "scrollbars",
      "scrollBy",
      "scrollTo",
      "scrollX",
      "scrollY",
      "self",
      "status",
      "statusbar",
      "stop",
      "toolbar",
      "top",
    ],
    "no-restricted-imports": "off",
    "no-restricted-properties": Array [
      "error",
      Object {
        "message": "arguments.callee is deprecated",
        "object": "arguments",
        "property": "callee",
      },
      Object {
        "message": "Please use Number.isFinite instead",
        "object": "global",
        "property": "isFinite",
      },
      Object {
        "message": "Please use Number.isFinite instead",
        "object": "self",
        "property": "isFinite",
      },
      Object {
        "message": "Please use Number.isFinite instead",
        "object": "window",
        "property": "isFinite",
      },
      Object {
        "message": "Please use Number.isNaN instead",
        "object": "global",
        "property": "isNaN",
      },
      Object {
        "message": "Please use Number.isNaN instead",
        "object": "self",
        "property": "isNaN",
      },
      Object {
        "message": "Please use Number.isNaN instead",
        "object": "window",
        "property": "isNaN",
      },
      Object {
        "message": "Please use Object.defineProperty instead.",
        "property": "__defineGetter__",
      },
      Object {
        "message": "Please use Object.defineProperty instead.",
        "property": "__defineSetter__",
      },
      Object {
        "message": "Use the exponentiation operator (**) instead.",
        "object": "Math",
        "property": "pow",
      },
    ],
    "no-restricted-syntax": Array [
      "error",
      Object {
        "message": "for..in loops iterate over the entire prototype chain, which is virtually never what you want. Use Object.{keys,values,entries}, and iterate over the resulting array.",
        "selector": "ForInStatement",
      },
      Object {
        "message": "Labels are a form of GOTO; using them makes code confusing and hard to maintain and understand.",
        "selector": "LabeledStatement",
      },
      Object {
        "message": "\`with\` is disallowed in strict mode because it makes code impossible to predict and optimize.",
        "selector": "WithStatement",
      },
    ],
    "no-return-assign": Array [
      "error",
      "always",
    ],
    "no-return-await": "error",
    "no-script-url": "error",
    "no-self-assign": Array [
      "error",
      Object {
        "props": false,
      },
    ],
    "no-self-compare": "error",
    "no-sequences": "error",
    "no-setter-return": "error",
    "no-shadow": "error",
    "no-shadow-restricted-names": "error",
    "no-sparse-arrays": "error",
    "no-template-curly-in-string": "error",
    "no-ternary": "off",
    "no-this-before-super": "error",
    "no-throw-literal": "error",
    "no-undef": "error",
    "no-undef-init": "error",
    "no-undefined": "off",
    "no-underscore-dangle": Array [
      "error",
      Object {
        "allow": Array [],
        "allowAfterSuper": false,
        "allowAfterThis": false,
        "enforceInMethodNames": true,
      },
    ],
    "no-unexpected-multiline": "error",
    "no-unmodified-loop-condition": "off",
    "no-unneeded-ternary": Array [
      "error",
      Object {
        "defaultAssignment": false,
      },
    ],
    "no-unreachable": "error",
    "no-unsafe-finally": "error",
    "no-unsafe-negation": "error",
    "no-unused-expressions": Array [
      "error",
      Object {
        "allowShortCircuit": false,
        "allowTaggedTemplates": false,
        "allowTernary": false,
      },
    ],
    "no-unused-labels": "error",
    "no-unused-vars": Array [
      "error",
      Object {
        "args": "after-used",
        "ignoreRestSiblings": true,
        "vars": "all",
      },
    ],
    "no-use-before-define": Array [
      "error",
      Object {
        "classes": true,
        "functions": true,
        "variables": true,
      },
    ],
    "no-useless-call": "off",
    "no-useless-catch": "off",
    "no-useless-computed-key": "error",
    "no-useless-concat": "error",
    "no-useless-constructor": "error",
    "no-useless-escape": "error",
    "no-useless-rename": "error",
    "no-useless-return": "error",
    "no-var": "error",
    "no-void": "error",
    "no-warning-comments": Array [
      "off",
      Object {
        "location": "start",
        "terms": Array [
          "todo",
          "fixme",
          "xxx",
        ],
      },
    ],
    "no-with": "error",
    "object-shorthand": Array [
      "error",
      "always",
      Object {
        "avoidQuotes": true,
        "ignoreConstructors": false,
      },
    ],
    "one-var": Array [
      "error",
      "never",
    ],
    "operator-assignment": Array [
      "error",
      "always",
    ],
    "padding-line-between-statements": "off",
    "prefer-const": Array [
      "error",
      Object {
        "destructuring": "any",
        "ignoreReadBeforeAssign": true,
      },
    ],
    "prefer-destructuring": Array [
      "error",
      Object {
        "AssignmentExpression": Object {
          "array": true,
          "object": true,
        },
        "VariableDeclarator": Object {
          "array": false,
          "object": true,
        },
      },
      Object {
        "enforceForRenamedProperties": false,
      },
    ],
    "prefer-exponentiation-operator": "error",
    "prefer-named-capture-group": "off",
    "prefer-numeric-literals": "error",
    "prefer-object-spread": "off",
    "prefer-promise-reject-errors": Array [
      "error",
      Object {
        "allowEmptyReject": true,
      },
    ],
    "prefer-reflect": "off",
    "prefer-regex-literals": "error",
    "prefer-rest-params": "error",
    "prefer-spread": "error",
    "prefer-template": "error",
    "prettier/prettier": "error",
    "radix": "error",
    "react-hooks/exhaustive-deps": "error",
    "react-hooks/rules-of-hooks": "error",
    "react/boolean-prop-naming": "off",
    "react/button-has-type": Array [
      "error",
      Object {
        "button": true,
        "reset": false,
        "submit": true,
      },
    ],
    "react/default-props-match-prop-types": Array [
      "error",
      Object {
        "allowRequiredDefaults": false,
      },
    ],
    "react/destructuring-assignment": "off",
    "react/display-name": "off",
    "react/forbid-component-props": "off",
    "react/forbid-dom-props": "off",
    "react/forbid-elements": "off",
    "react/forbid-foreign-prop-types": Array [
      "warn",
      Object {
        "allowInPropTypes": true,
      },
    ],
    "react/forbid-prop-types": Array [
      "error",
      Object {
        "checkChildContextTypes": true,
        "checkContextTypes": true,
        "forbid": Array [
          "any",
          "array",
          "object",
        ],
      },
    ],
    "react/jsx-boolean-value": Array [
      "error",
      "never",
      Object {
        "always": Array [],
      },
    ],
    "react/jsx-child-element-spacing": "off",
    "react/jsx-closing-bracket-location": "off",
    "react/jsx-closing-tag-location": "off",
    "react/jsx-curly-brace-presence": Array [
      "error",
      Object {
        "children": "never",
        "props": "never",
      },
    ],
    "react/jsx-curly-newline": "off",
    "react/jsx-curly-spacing": "off",
    "react/jsx-equals-spacing": "off",
    "react/jsx-filename-extension": "off",
    "react/jsx-first-prop-new-line": "off",
    "react/jsx-fragments": Array [
      "error",
      "syntax",
    ],
    "react/jsx-handler-names": Array [
      "off",
      Object {
        "eventHandlerPrefix": "handle",
        "eventHandlerPropPrefix": "on",
      },
    ],
    "react/jsx-indent": "off",
    "react/jsx-indent-props": "off",
    "react/jsx-key": "error",
    "react/jsx-max-depth": "off",
    "react/jsx-max-props-per-line": "off",
    "react/jsx-no-bind": "off",
    "react/jsx-no-comment-textnodes": "error",
    "react/jsx-no-duplicate-props": Array [
      "error",
      Object {
        "ignoreCase": true,
      },
    ],
    "react/jsx-no-literals": "off",
    "react/jsx-no-target-blank": Array [
      "error",
      Object {
        "enforceDynamicLinks": "always",
      },
    ],
    "react/jsx-no-undef": "error",
    "react/jsx-no-useless-fragment": "error",
    "react/jsx-one-expression-per-line": "off",
    "react/jsx-pascal-case": Array [
      "error",
      Object {
        "allowAllCaps": true,
        "ignore": Array [],
      },
    ],
    "react/jsx-props-no-multi-spaces": "off",
    "react/jsx-props-no-spreading": "off",
    "react/jsx-sort-default-props": "error",
    "react/jsx-sort-props": Array [
      "error",
      Object {
        "callbacksLast": true,
        "ignoreCase": false,
        "noSortAlphabetically": true,
        "reservedFirst": true,
        "shorthandFirst": true,
        "shorthandLast": false,
      },
    ],
    "react/jsx-tag-spacing": "off",
    "react/jsx-uses-react": "error",
    "react/jsx-uses-vars": "error",
    "react/jsx-wrap-multilines": "off",
    "react/no-access-state-in-setstate": "error",
    "react/no-array-index-key": "error",
    "react/no-children-prop": "error",
    "react/no-danger": "warn",
    "react/no-danger-with-children": "error",
    "react/no-deprecated": "error",
    "react/no-did-mount-set-state": "off",
    "react/no-did-update-set-state": "error",
    "react/no-direct-mutation-state": "error",
    "react/no-find-dom-node": "error",
    "react/no-is-mounted": "error",
    "react/no-multi-comp": "off",
    "react/no-redundant-should-component-update": "error",
    "react/no-render-return-value": "error",
    "react/no-set-state": "off",
    "react/no-string-refs": "error",
    "react/no-this-in-sfc": "error",
    "react/no-typos": "error",
    "react/no-unescaped-entities": "error",
    "react/no-unknown-property": "error",
    "react/no-unsafe": "error",
    "react/no-unused-prop-types": Array [
      "error",
      Object {
        "customValidators": Array [],
        "skipShapeProps": true,
      },
    ],
    "react/no-unused-state": "error",
    "react/no-will-update-set-state": "error",
    "react/prefer-es6-class": Array [
      "error",
      "always",
    ],
    "react/prefer-read-only-props": "off",
    "react/prefer-stateless-function": "error",
    "react/prop-types": Array [
      "error",
      Object {
        "customValidators": Array [],
        "ignore": Array [],
        "skipUndeclared": false,
      },
    ],
    "react/react-in-jsx-scope": "error",
    "react/require-default-props": Array [
      "error",
      Object {
        "forbidDefaultForRequired": true,
      },
    ],
    "react/require-optimization": "off",
    "react/require-render-return": "error",
    "react/self-closing-comp": "error",
    "react/sort-comp": Array [
      "error",
      Object {
        "groups": Object {
          "lifecycle": Array [
            "displayName",
            "propTypes",
            "contextTypes",
            "childContextTypes",
            "mixins",
            "statics",
            "defaultProps",
            "constructor",
            "getDefaultProps",
            "getInitialState",
            "state",
            "getChildContext",
            "componentWillMount",
            "componentDidMount",
            "componentWillReceiveProps",
            "shouldComponentUpdate",
            "componentWillUpdate",
            "componentDidUpdate",
            "componentWillUnmount",
          ],
          "rendering": Array [
            "/^render.+$/",
            "render",
          ],
        },
        "order": Array [
          "static-methods",
          "instance-variables",
          "lifecycle",
          "/^on.+$/",
          "getters",
          "setters",
          "/^(get|set)(?!(InitialState$|DefaultProps$|ChildContext$)).+$/",
          "instance-methods",
          "everything-else",
          "rendering",
        ],
      },
    ],
    "react/sort-prop-types": "error",
    "react/state-in-constructor": Array [
      "error",
      "never",
    ],
    "react/static-property-placement": Array [
      "error",
      "static public field",
    ],
    "react/style-prop-object": "error",
    "react/void-dom-elements-no-children": "error",
    "require-atomic-updates": "off",
    "require-await": "off",
    "require-jsdoc": "off",
    "require-unicode-regexp": "off",
    "require-yield": "error",
    "sort-imports": Array [
      "error",
      Object {
        "ignoreCase": false,
        "ignoreDeclarationSort": true,
        "ignoreMemberSort": false,
      },
    ],
    "sort-keys": Array [
      "off",
      "asc",
      Object {
        "caseSensitive": false,
        "natural": true,
      },
    ],
    "sort-vars": "off",
    "spaced-comment": Array [
      "error",
      "always",
      Object {
        "block": Object {
          "balanced": true,
          "exceptions": Array [
            "-",
            "+",
          ],
          "markers": Array [
            "=",
            "!",
          ],
        },
        "line": Object {
          "exceptions": Array [
            "-",
            "+",
          ],
          "markers": Array [
            "=",
            "!",
          ],
        },
      },
    ],
    "strict": "error",
    "symbol-description": "error",
    "testing-library/await-async-query": "error",
    "testing-library/await-async-utils": "error",
    "testing-library/no-await-sync-query": "error",
    "testing-library/no-debug": "error",
    "testing-library/no-dom-import": Array [
      "error",
      "react",
    ],
    "testing-library/no-manual-cleanup": "error",
    "testing-library/no-render-in-setup": "error",
    "testing-library/no-wait-for-empty-callback": "error",
    "testing-library/no-wait-for-snapshot": "error",
    "testing-library/prefer-explicit-assert": "error",
    "testing-library/prefer-find-by": "error",
    "testing-library/prefer-presence-queries": "error",
    "testing-library/prefer-screen-queries": "error",
    "testing-library/prefer-wait-for": "error",
    "use-isnan": "error",
    "valid-typeof": Array [
      "error",
      Object {
        "requireStringLiterals": true,
      },
    ],
    "vars-on-top": "error",
    "yoda": "error",
  },
  "settings": Object {
    "import/cache": 60,
    "import/extensions": Array [
      ".js",
      ".jsx",
      ".mjs",
      ".ts",
      ".tsx",
      ".d.ts",
    ],
    "import/external-module-folders": Array [
      "node_modules",
      "node_modules/@types",
    ],
    "import/internal-regex": /\\^@\\\\//,
    "import/parsers": Object {
      "@typescript-eslint/parser": Array [
        ".ts",
        ".tsx",
        ".d.ts",
      ],
    },
    "import/resolver": "/mock/test/path",
    "react": Object {
      "linkComponents": Array [
        Object {
          "linkAttribute": "to",
          "name": "Link",
        },
      ],
      "pragma": "React",
      "version": "detect",
    },
  },
}
`;
